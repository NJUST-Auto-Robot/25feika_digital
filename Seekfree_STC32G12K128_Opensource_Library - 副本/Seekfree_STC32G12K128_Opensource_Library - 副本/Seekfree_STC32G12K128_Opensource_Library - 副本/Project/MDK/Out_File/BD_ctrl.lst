C251 COMPILER V5.60.0,  BD_ctrl                                                            24/03/25  23:39:16  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE BD_ctrl
OBJECT MODULE PLACED IN .\Out_File\BD_ctrl.obj
COMPILER INVOKED BY: D:\keil\C251\BIN\C251.EXE ..\CODE\BD_ctrl.c XSMALL INTR2 FLOAT64 WARNINGLEVEL(3) OPTIMIZE(0,SPEED) 
                    -BROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;.
                    -.\USER\inc;..\USER\src;..\..\Libraries\seekfree_components) DEBUG PRINT(.\Out_File\BD_ctrl.lst) TABS(2) OBJECT(.\Out_Fil
                    -e\BD_ctrl.obj) 

stmt  level    source

    1          /********************************************************************************************************
             -*************
    2           * @author        Niko
    3           * @Target core   STC32G12K128
    4           * @date          2025-3-6
    5           * @brief           此库为元素识别库，后续控制在主函数中进行
    6           * @Last editor     Niko
    7           ********************************************************************************************************
             -************/
    8          
    9          #include "headfile.h"
   10          #include "BD_ctrl.h"
   11          
   12           int flag = NO_FLAG;
   13           int round_flag = 0;
   14          /************************************************
   15           函数名：Nelement_recogniz
   16           功 能：元素识别函数
   17           参 数：void
   18           返回值：void
   19          ************************************************/
   20          void Nelement_recogniz(void)
   21          {
   22   1       int temp_r11 = dg_state.L_r11_once;
   23   1       int temp_r12 = dg_state.L_r12_once;
   24   1       int temp_r21 = dg_state.L_r21_once;
   25   1       int temp_l11 = dg_state.L_l11_once;
   26   1       int temp_l12 = dg_state.L_l12_once;
   27   1       int temp_l21 = dg_state.L_l21_once;
   28   1       int error_11 = dg_state.L_l11_once - dg_state.L_r11_once;
   29   1       int error_21 = dg_state.L_l21_once - dg_state.L_r21_once;
   30   1       int error_12 = dg_state.L_l12_once - dg_state.L_r12_once;
   31   1       int stra = error_11 + error_12 + error_21;
   32   1           stra = stra / 3;
   33   1          Nadc_normalization_once();
   34   1          if (dg_state.L_l11_once<8)
   35   1          {
   36   2              dg_state.L_l11_once = 0;
   37   2          }
   38   1          if (dg_state.L_l12_once<8)
   39   1          {
   40   2              dg_state.L_l12_once = 0;
   41   2          }
   42   1          if (dg_state.L_l13_once<8)
   43   1          {
   44   2              dg_state.L_l13_once = 0;
   45   2          }
   46   1          if (dg_state.L_l21_once<8)
   47   1          {
   48   2              dg_state.L_l21_once = 0;
   49   2          }
   50   1          if (dg_state.L_r11_once<8)
   51   1          {
   52   2              dg_state.L_r11_once = 0;
   53   2          }
   54   1          if (dg_state.L_r12_once<8)
C251 COMPILER V5.60.0,  BD_ctrl                                                            24/03/25  23:39:16  PAGE 2   

   55   1          {
   56   2              dg_state.L_r12_once = 0;
   57   2          }
   58   1          if (dg_state.L_r13_once<8)
   59   1          {
   60   2              dg_state.L_r13_once = 0;
   61   2          }
   62   1          if (dg_state.L_r21_once<8)
   63   1          {
   64   2              dg_state.L_r21_once = 0;
   65   2          }
   66   1          
   67   1          /*以下为直线识别部分*/
   68   1          if (98 < dg_state.L_r13_once < 102 && -2 < stra < 2)
   69   1          {
   70   2              flag = STRIAGHT;
   71   2              round_flag = 0;
   72   2          }
   73   1          /*以下为十字路口识别部分*/
   74   1          if (90<dg_state.L_r13_once<100&&90<dg_state.L_l13_once<100&&-2 <error_11 < 2 && -2 <error_12 < 2&&-2 
             -<error_21 < 2)
   75   1          {
   76   2              flag = Crossroads;
   77   2          }
   78   1          /*以下为直角弯道识别部分*/
   79   1          if ( dg_state.L_l13_once >85&& dg_state.L_r13_once > 85)
   80   1          {
   81   2              if (error_11 > 90 && error_21 > 90 && error_12 > 80)
   82   2              {
   83   3                  flag = TurnLeft;
   84   3              }
   85   2              else if (error_11 <-90 && error_21 <-90 && error_12 <-80)
   86   2              {
   87   3                  flag = TurnRight;
   88   3              }
   89   2              
   90   2      }
   91   1      /*以下为锐角弯道识别部分*/
   92   1          if ( 5<dg_state.L_l13_once <90&& dg_state.L_r13_once > 90)
   93   1          {
   94   2          if (5<error_11 < 90 && 5<error_21 < 90 && 5<error_12 <80)
   95   2          {
   96   3              flag = AngleLeft;
   97   3          }
   98   2          else  if (-90<error_11 < -5 && -90<error_21 < -5 && -80<error_12 <-5)
   99   2          {
  100   3              flag = AngleRight;
  101   3          }
  102   2      }
  103   1      
  104   1      /*以下为环岛识别部分*/
  105   1      if ((dg_state.L_r13_once > 180) && dg_state.L_l13_once > 50)//接近环岛出入点
  106   1      {
  107   2      Nadc_normalization_once();}
  108   1      //进入环岛
  109   1      if ((temp_l11-=dg_state.L_l11_once)>30&&(temp_l12-=dg_state.L_l12_once)>20&&(temp_l21-=dg_state.L_l21_onc
             -e>10)&&round_flag==0)
  110   1      {
  111   2          flag = InRoundaboutL;
  112   2      }
  113   1      if ((temp_r11-=dg_state.L_r11_once)>30&&(temp_r12-=dg_state.L_r12_once)>20&&(temp_r21-=dg_state.L_r21_onc
             -e>10)&&round_flag==0)
  114   1      {
  115   2          flag = InRoundaboutR;
  116   2      }
  117   1      //离开环岛
C251 COMPILER V5.60.0,  BD_ctrl                                                            24/03/25  23:39:16  PAGE 3   

  118   1      // if (temp_l11-=dg_state.l11_once<-30&&temp_l12==dg_state.l12_once<-20&&temp_l21==dg_state.l21_once<-10)
  119   1      // {
  120   1      //     flag = OutRoundaboutL;
  121   1      //     round_flag++;
  122   1      // }
  123   1      // if (temp_r11-=dg_state.r11_once<-30&&temp_r12==dg_state.r12_once<-20&&temp_r21==dg_state.r21_once<-10)
  124   1      // {
  125   1      //     flag = OutRoundaboutR;
  126   1      //     round_flag++;
  127   1      // }
  128   1      }
  129          
  130          
  131          
  132          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =      1179     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        24     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        12     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
