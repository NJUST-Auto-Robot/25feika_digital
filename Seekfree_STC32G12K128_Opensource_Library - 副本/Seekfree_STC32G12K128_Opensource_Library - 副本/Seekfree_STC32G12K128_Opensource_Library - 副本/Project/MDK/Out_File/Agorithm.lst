C251 COMPILER V5.60.0,  Agorithm                                                           04/03/25  13:23:50  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE Agorithm
OBJECT MODULE PLACED IN .\Out_File\Agorithm.obj
COMPILER INVOKED BY: D:\C251\BIN\C251.EXE ..\CODE\Agorithm.c XSMALL INTR2 FLOAT64 WARNINGLEVEL(3) OPTIMIZE(0,SPEED) BROW
                    -SE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;..\US
                    -ER\inc;..\USER\src;..\..\Libraries\seekfree_components) DEBUG PRINT(.\Out_File\Agorithm.lst) TABS(2) OBJECT(.\Out_File\A
                    -gorithm.obj) 

stmt  level    source

    1          #include "headfile.h"
    2          
    3          int32 TIM_0_flag=0;
    4          int32 TIM_1_flag=0;
    5          
    6          pid_param_t Nomal_PID;//位置式PID
    7          pid_param_t DJ_PID;//增量式PID
    8          pid_param_t CS_PID;//差速
    9          
   10          
   11          
   12          /************************************************
   13          函数名：constrain_float
   14          功  能：限幅函数，将输入值限制在指定范围内
   15          参  数：float amt, float low, float high
   16          返回值：float 限幅后的值
   17          ************************************************/
   18          float constrain_float(float amt, float low, float high)
   19          {
   20   1          return ((amt)<(low)?(low):((amt)>(high)?(high):(amt)));
   21   1      }
   22          
   23          
   24          /************************************************
   25          函数名：PidLocCtrl
   26          功  能：位置式PID控制
   27          参  数：pid_param_t * pid, float error
   28          返回值：float 控制输出
   29          ************************************************/
   30          float PidLocCtrl(pid_param_t * pid, float error)
   31          {
   32   1      
   33   1          Nomal_PID.kp=1.1;
   34   1          Nomal_PID.kd=5;
   35   1      
   36   1          CS_PID.kp=1;
   37   1          CS_PID.kd=0;
   38   1      
   39   1          /* 累积误差 */
   40   1          pid->integrator += error;
   41   1      
   42   1          /* 误差限幅 */
   43   1          constrain_float(pid->integrator, -pid->imax, pid->imax);
   44   1      
   45   1      
   46   1          pid->out_p = pid->kp * error;
   47   1          pid->out_i = pid->ki * pid->integrator;
   48   1          pid->out_d = pid->kd * (error - pid->last_error);
   49   1      
   50   1          pid->last_error = error;
   51   1      
   52   1          pid->out = pid->out_p + pid->out_i + pid->out_d;
   53   1      
   54   1      //    if(pid->out>SERVO_MOTOR_LMAX)
   55   1      //    {pid->out=SERVO_MOTOR_LMAX;}
   56   1      //    if(pid->out<SERVO_MOTOR_RMIN)
C251 COMPILER V5.60.0,  Agorithm                                                           04/03/25  13:23:50  PAGE 2   

   57   1      //    {pid->out=SERVO_MOTOR_RMIN;}
   58   1          return pid->out;
   59   1      //    printf("OUT:%d\n",pid->out);
   60   1      }
   61          
   62          /************************************************
   63          函数名：PidIncCtrl_L
   64          功  能：增量式PID控制左
   65          参  数：&DJ_PID, L_speed-templ_pluse 期待速度-当前速度
   66          返回值：float 控制输出
   67          ************************************************/
   68          float PidIncCtrl_L(pid_param_t * pid, float error)
   69          {
   70   1          DJ_PID.kp=110;
   71   1          DJ_PID.ki=6;
   72   1          DJ_PID.kd=5;
   73   1      
   74   1      
   75   1      
   76   1          pid->out_p = pid->kp * (error - pid->last_error);
   77   1          pid->out_i = pid->ki * error;
   78   1          pid->out_d = pid->kd * ((error - pid->last_error) - pid->last_derivative);
   79   1      
   80   1          pid->last_derivative = error - pid->last_error;
   81   1          pid->last_error = error;
   82   1      
   83   1          pid->out += pid->out_p + pid->out_i + pid->out_d;
   84   1          return pid->out;
   85   1      }
   86          
   87          /************************************************
   88          函数名：PidIncCtrl_R
   89          功  能：增量式PID控制右
   90          参  数：&DJ_PID, R_speed-tempr_pluse 期待速度-当前速度
   91          返回值：float 控制输出
   92          ************************************************/
   93          float PidIncCtrl_R(pid_param_t * pid, float error)
   94          {
   95   1          DJ_PID.kp=110;
   96   1          DJ_PID.ki=6;
   97   1          DJ_PID.kd=5;
   98   1      
   99   1      
  100   1      
  101   1          pid->out_p = pid->kp * (error - pid->last_error);
  102   1          pid->out_i = pid->ki * error;
  103   1          pid->out_d = pid->kd * ((error - pid->last_error) - pid->last_derivative);
  104   1      
  105   1          pid->last_derivative = error - pid->last_error;
  106   1          pid->last_error = error;
  107   1      
  108   1          pid->out += pid->out_p + pid->out_i + pid->out_d;
  109   1          return pid->out;
  110   1      }
  111          
  112          /************************************************
  113           函数名：DRV8701_loop_ctrl
  114           功 能：驱动DRV8701电机控制器的闭环控制
  115           参 数：左期望速度, 右期望速度
  116           返回值：无
  117          ************************************************/
  118          float L_OUT,R_OUT=0;
  119          void DRV8701_loop_ctrl(float L_speed,float R_speed)//填入期望速度
  120          {
  121   1        L_OUT=PidIncCtrl_L(&DJ_PID,L_speed-templ_pluse);
  122   1        R_OUT=PidIncCtrl_R(&DJ_PID,R_speed-tempr_pluse);
C251 COMPILER V5.60.0,  Agorithm                                                           04/03/25  13:23:50  PAGE 3   

  123   1      
  124   1        DRV8701_ctrl(L_OUT,R_OUT);
  125   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =      1248     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =       204     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        24     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
