C251 COMPILER V5.60.0,  Imu_1                                                              04/03/25  13:23:51  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE Imu_1
OBJECT MODULE PLACED IN .\Out_File\Imu_1.obj
COMPILER INVOKED BY: D:\C251\BIN\C251.EXE ..\CODE\Imu_1.c XSMALL INTR2 FLOAT64 WARNINGLEVEL(3) OPTIMIZE(0,SPEED) BROWSE 
                    -INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;..\USER\
                    -inc;..\USER\src;..\..\Libraries\seekfree_components) DEBUG PRINT(.\Out_File\Imu_1.lst) TABS(2) OBJECT(.\Out_File\Imu_1.o
                    -bj) 

stmt  level    source

    1          #include "headfile.h"
    2          
    3          gyro_param_t Gyro_Offset;
    4          IMU_param_t  IMU_Data;
    5          
    6          int IMU_1_Open_flag = 0;//开启IMU标志位
    7          
    8          float Yaw_1 = 0;
    9          float Roll_1 = 0;
   10          float Picth_1 = 0;
   11          
   12          void IMU_init(void)//IMU初始化
   13          {
   14   1          imu660ra_init();   //IMU660惯导初始化
   15   1      
   16   1          IMU_gyro_Offset_Init();// 陀螺仪零漂初始化
   17   1      }
   18          
   19          uint16 i;
   20          void IMU_gyro_Offset_Init(void)
   21          {
   22   1          Gyro_Offset.Xdata = 0;
   23   1          Gyro_Offset.Ydata = 0;
   24   1          Gyro_Offset.Zdata = 0;
   25   1      
   26   1           
   27   1          for (i = 0; i < 1000; i++)
   28   1          {
   29   2              Gyro_Offset.Xdata += imu660ra_gyro_x;
   30   2              Gyro_Offset.Ydata += imu660ra_gyro_y;
   31   2              Gyro_Offset.Zdata += imu660ra_gyro_z;
   32   2              delay_ms(5);   // 最大 1Khz
   33   2          }
   34   1      
   35   1          Gyro_Offset.Xdata /= 1000;
   36   1          Gyro_Offset.Ydata /= 1000;
   37   1          Gyro_Offset.Zdata /= 1000;
   38   1      }
   39          
   40          void IMU_GetValues(void)//将采集的数值转化为实际物理值, 并对陀螺仪进行去零漂处理
   41          {
   42   1          IMU_Data.gyro_x = ((float) imu660ra_gyro_x - Gyro_Offset.Xdata)* PI / 180/ 16.384f;
   43   1          IMU_Data.gyro_y = ((float) imu660ra_gyro_y - Gyro_Offset.Ydata)* PI / 180/ 16.384f;
   44   1          IMU_Data.gyro_z = ((float) imu660ra_gyro_z - Gyro_Offset.Zdata)* PI / 180/ 16.384f;
   45   1      
   46   1          if(IMU_Data.gyro_z<0.015&&IMU_Data.gyro_z>-0.015)//滤波
   47   1          {
   48   2              Yaw_1-=0;
   49   2          }
   50   1          else
   51   1          {
   52   2              IMU_Handle_180();
   53   2           }
   54   1      
   55   1      }
   56          
C251 COMPILER V5.60.0,  Imu_1                                                              04/03/25  13:23:51  PAGE 2   

   57          void IMU_Handle_180(void)
   58          {
   59   1      
   60   1          Yaw_1-=RAD_TO_ANGLE(IMU_Data.gyro_z*0.005);//(积分过程)本来是逆时针为正,现在改为顺时针为正
   61   1      
   62   1         if(Yaw_1>180 && Yaw_1<=360)
   63   1          {
   64   2              Yaw_1-=360;
   65   2          }
   66   1          else if(Yaw_1<(-180) && Yaw_1>=(-360))
   67   1          {
   68   2              Yaw_1+=360;
   69   2          }
   70   1      
   71   1      }
   72          
   73          void IMU_data_get(void)
   74          {
   75   1          imu660ra_get_gyro();
   76   1      
   77   1          if(IMU_1_Open_flag==1)
   78   1          {
   79   2              IMU_GetValues();
   80   2          }
   81   1      }
   82          
   83          void IMU_text(void)
   84          {
   85   1          IMU_1_Open_flag=1;
   86   1      //    while(1)
   87   1      //    {
   88   1      //        ips200_show_string(8*0, 16*0, "Yaw:");      ips200_show_float(8*5,16*0,Yaw_1,3,6);
   89   1      //    }
   90   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       657     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        52     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        30     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
